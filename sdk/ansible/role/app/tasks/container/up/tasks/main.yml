---
- block:
      - name: Configure tasks namespace environment variable
        lineinfile:
            create: yes
            path: '/srv/tasks/{{ tasks_env_file }}'
            regexp: '^COMPOSE_PROJECT_NAME='
            line: 'COMPOSE_PROJECT_NAME={{ tasks_compose_project_name }}'
      - name: Configure tasks network environment variable
        lineinfile:
            create: yes
            path: '/srv/tasks/{{ tasks_env_file }}'
            regexp: '^NETWORK='
            line: 'NETWORK={{ tasks_network }}'
      - name: Configure proxy host environment variable
        lineinfile:
            create: yes
            path: '/srv/tasks/{{ tasks_env_file }}'
            regexp: '^PROXY_HOST='
            line: 'PROXY_HOST={{ tasks_proxy_host }}'
      - name: Configure virtual host environment variable
        lineinfile:
            create: yes
            path: '/srv/tasks/{{ tasks_env_file }}'
            regexp: '^VIRTUAL_HOST='
            line: 'VIRTUAL_HOST={{ tasks_virtual_host }}'
      - name: Configure discovery host environment variable
        lineinfile:
            create: yes
            path: '/srv/tasks/{{ tasks_env_file }}'
            regexp: '^DISCOVERY_HOST='
            line: 'DISCOVERY_HOST={{ tasks_discovery_host }}'
      - name: Configure directory environment variable
        lineinfile:
            create: yes
            path: '/srv/tasks/{{ tasks_env_file }}'
            regexp: '^DIRECTORY='
            line: 'DIRECTORY={{ tasks_directory }}'
      - name: Configure jwt private key environment variable
        lineinfile:
            create: yes
            path: '/srv/tasks/{{ tasks_env_file }}'
            regexp: '^JWT_PRIVATE_KEY='
            line: 'JWT_PRIVATE_KEY={{ tasks_jwt_private_key }}'
      - name: Configure jwt public key environment variable
        lineinfile:
            create: yes
            path: '/srv/tasks/{{ tasks_env_file }}'
            regexp: '^JWT_PUBLIC_KEY='
            line: 'JWT_PUBLIC_KEY={{ tasks_jwt_public_key }}'
      - name: Configure database host environment variable
        lineinfile:
            create: yes
            path: '/srv/tasks/{{ tasks_env_file }}'
            regexp: '^DATABASE_HOST='
            line: 'DATABASE_HOST={{ tasks_database_host }}'
      - name: Configure database port environment variable
        lineinfile:
            create: yes
            path: '/srv/tasks/{{ tasks_env_file }}'
            regexp: '^DATABASE_PORT='
            line: 'DATABASE_PORT={{ tasks_database_port }}'
      - name: Configure database name environment variable
        lineinfile:
            create: yes
            path: '/srv/tasks/{{ tasks_env_file }}'
            regexp: '^DATABASE_NAME='
            line: 'DATABASE_NAME={{ tasks_database_name }}'
      - name: Configure database username environment variable
        lineinfile:
            create: yes
            path: '/srv/tasks/{{ tasks_env_file }}'
            regexp: '^DATABASE_USERNAME='
            line: 'DATABASE_USERNAME={{ tasks_database_username }}'
      - name: Configure database password environment variable
        lineinfile:
            create: yes
            path: '/srv/tasks/{{ tasks_env_file }}'
            regexp: '^DATABASE_PASSWORD='
            line: 'DATABASE_PASSWORD={{ tasks_database_password }}'
  when: tasks_env_file is not none

- name: Up tasks container
  docker_service:
      project_src: /srv/tasks
      state: present
  environment:
      COMPOSE_PROJECT_NAME: '{{ tasks_compose_project_name }}'
      NETWORK: '{{ tasks_network }}'
      PROXY_HOST: '{{ tasks_proxy_host }}'
      VIRTUAL_HOST: '{{ tasks_virtual_host }}'
      DIRECTORY: '{{ tasks_directory }}'
      JWT_PRIVATE_KEY: '{{ tasks_jwt_private_key }}'
      JWT_PUBLIC_KEY: '{{ tasks_jwt_public_key }}'
      DATABASE_HOST: '{{ tasks_database_host }}'
      DATABASE_PORT: '{{ tasks_database_port }}'
      DATABASE_NAME: '{{ tasks_database_name }}'
      DATABASE_USERNAME: '{{ tasks_database_username }}'
      DATABASE_PASSWORD: '{{ tasks_database_password }}'

- name: Waiting for tasks container to finalize installation
  shell:
      cmd: docker-compose exec -T php pidof php-fpm | cat
      chdir: /srv/tasks
  register: output
  until: output.stdout|match('^[0-9]+(\s[0-9]+)*$')
  retries: 60
  delay: 10
