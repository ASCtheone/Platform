---
- block:
    - block:
        - name: Configure forms namespace environment variable
          lineinfile:
            create: yes
            path: '/srv/forms/{{ forms_env_file }}'
            regexp: '^COMPOSE_PROJECT_NAME='
            line: 'COMPOSE_PROJECT_NAME={{ forms_compose_project_name }}'
        - name: Configure forms network environment variable
          lineinfile:
            create: yes
            path: '/srv/forms/{{ forms_env_file }}'
            regexp: '^NETWORK='
            line: 'NETWORK={{ forms_network }}'
        - name: Configure proxy host environment variable
          lineinfile:
            create: yes
            path: '/srv/forms/{{ forms_env_file }}'
            regexp: '^PROXY_HOST='
            line: 'PROXY_HOST={{ forms_proxy_host }}'
        - name: Configure nginx virtual host environment variable
          lineinfile:
            create: yes
            path: '/srv/forms/{{ forms_env_file }}'
            regexp: '^NGINX_VIRTUAL_HOST='
            line: 'NGINX_VIRTUAL_HOST={{ forms_nginx_virtual_host }}'
        - name: Configure adminer virtual host environment variable
          lineinfile:
            create: yes
            path: '/srv/forms/{{ forms_env_file }}'
            regexp: '^ADMINER_VIRTUAL_HOST='
            line: 'ADMINER_VIRTUAL_HOST={{ forms_adminer_virtual_host }}'
        - name: Configure rebrow virtual host environment variable
          lineinfile:
            create: yes
            path: '/srv/forms/{{ forms_env_file }}'
            regexp: '^REBROW_VIRTUAL_HOST='
            line: 'REBROW_VIRTUAL_HOST={{ forms_rebrow_virtual_host }}'
        - name: Configure discovery host environment variable
          lineinfile:
            create: yes
            path: '/srv/forms/{{ forms_env_file }}'
            regexp: '^DISCOVERY_HOST='
            line: 'DISCOVERY_HOST={{ forms_discovery_host }}'
        - name: Configure directory environment variable
          lineinfile:
            create: yes
            path: '/srv/forms/{{ forms_env_file }}'
            regexp: '^DIRECTORY='
            line: 'DIRECTORY={{ forms_directory }}'
        - name: Configure database host environment variable
          lineinfile:
            create: yes
            path: '/srv/forms/{{ forms_env_file }}'
            regexp: '^DATABASE_HOST='
            line: 'DATABASE_HOST={{ forms_database_host }}'
        - name: Configure database port environment variable
          lineinfile:
            create: yes
            path: '/srv/forms/{{ forms_env_file }}'
            regexp: '^DATABASE_PORT='
            line: 'DATABASE_PORT={{ forms_database_port }}'
        - name: Configure database name environment variable
          lineinfile:
            create: yes
            path: '/srv/forms/{{ forms_env_file }}'
            regexp: '^DATABASE_NAME='
            line: 'DATABASE_NAME={{ forms_database_name }}'
        - name: Configure database username environment variable
          lineinfile:
            create: yes
            path: '/srv/forms/{{ forms_env_file }}'
            regexp: '^DATABASE_USERNAME='
            line: 'DATABASE_USERNAME={{ forms_database_username }}'
        - name: Configure database password environment variable
          lineinfile:
            create: yes
            path: '/srv/forms/{{ forms_env_file }}'
            regexp: '^DATABASE_PASSWORD='
            line: 'DATABASE_PASSWORD={{ forms_database_password }}'
      when: forms_env_file is not none
    - name: Up forms container
      docker_service:
        project_src: /srv/forms
        files:
          - docker-compose.yml
          - 'docker-compose.{{ forms_env }}.yml'
        state: present
      environment:
        COMPOSE_PROJECT_NAME: '{{ forms_compose_project_name }}'
        NETWORK: '{{ forms_network }}'
        PROXY_HOST: '{{ forms_proxy_host }}'
        NGINX_VIRTUAL_HOST: '{{ forms_nginx_virtual_host }}'
        ADMINER_VIRTUAL_HOST: '{{ forms_adminer_virtual_host }}'
        REBROW_VIRTUAL_HOST: '{{ forms_rebrow_virtual_host }}'
        DIRECTORY: '{{ forms_directory }}'
        DATABASE_HOST: '{{ forms_database_host }}'
        DATABASE_PORT: '{{ forms_database_port }}'
        DATABASE_NAME: '{{ forms_database_name }}'
        DATABASE_USERNAME: '{{ forms_database_username }}'
        DATABASE_PASSWORD: '{{ forms_database_password }}'
    - name: Waiting for forms container to finalize installation
      shell:
        cmd: docker-compose exec -T php pidof php-fpm | cat
        chdir: /srv/forms
      register: _output
      until: _output.stdout|match('^[0-9]+(\s[0-9]+)*$')
      retries: 60
      delay: 10
  tags: [forms]
